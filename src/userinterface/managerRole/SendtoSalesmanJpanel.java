/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.managerRole;
import business.building.Apartment;
import business.building.Building;
import business.enterprise.Enterprise;
import business.organization.Organization;
import business.useraccount.UserAccount;
import business.workqueue.ManagerManagerRequest;
import business.workqueue.ManagerSalesmanRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.administrativeRole.ManageBuildingsJpanel;
/**
 *
 * @author apple
 */
public class SendtoSalesmanJpanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private Building building;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Apartment apt;
    /**
     * Creates new form SendtoSalesmanJpanel
     */
    public SendtoSalesmanJpanel(JPanel userProcessContainer,Building building, Apartment apt, Enterprise enterprise, UserAccount useraccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.building = building;
        this.enterprise = enterprise;
        this.userAccount = useraccount;
        this.apt = apt;
        populateTable();
    }
public void populateTable(){
        DefaultTableModel dtm=(DefaultTableModel)SalesmanTable.getModel();
        dtm.setRowCount(0);
        
        for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList()){
            for(UserAccount useraccount : organization.getUserAccountDirectory().getUserAccountList()){
                //System.out.println(String.valueOf(useraccount.getRole()));
                if(String.valueOf(useraccount.getRole()).contains("Salesman")){
                    Object row[]= new Object[dtm.getColumnCount()];
                    row[0] = useraccount.getEmployee().getId();
                    row[1] = useraccount.getEmployee().getName();
                    row[2] = useraccount;
                    dtm.addRow(row);
                }
            }
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SalesmanTable = new javax.swing.JTable();
        BackJBtn = new javax.swing.JButton();
        SendJBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(166, 166, 234));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Send Apartments to Salesman");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(181, 11, 285, 31));

        SalesmanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Room Number", "Name", "Account"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(SalesmanTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 60, 552, 211));

        BackJBtn.setText("<<<Back");
        BackJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackJBtnActionPerformed(evt);
            }
        });
        add(BackJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 311, -1, -1));

        SendJBtn.setText("Send");
        SendJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendJBtnActionPerformed(evt);
            }
        });
        add(SendJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 311, 86, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BackJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackJBtnActionPerformed
        // TODO add your handling code here:
        backAction();
    }//GEN-LAST:event_BackJBtnActionPerformed

    private void backAction() {
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SelectAptJpanel saj = (SelectAptJpanel) component;
        saj.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }
    
    private void SendJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendJBtnActionPerformed
        // TODO add your handling code here:
        int selectedrow = SalesmanTable.getSelectedRow();
        if(selectedrow>=0){
            UserAccount salesaccount = (UserAccount)SalesmanTable.getValueAt(selectedrow, 2);
            ManagerSalesmanRequest request = new ManagerSalesmanRequest();
            if(apt.getSalesman() != null){
                JOptionPane.showMessageDialog(null, "Already assigned a salesman!");
            }
            else{
                apt.setSalesman(SalesmanTable.getValueAt(selectedrow, 1).toString());
            
                request.setApartment(apt);
                request.setBuilding(building);
                request.setSender(userAccount);
                request.setReceiver(salesaccount);
                salesaccount.getWorkqueue().getWorkRequestList().add(request);
                //System.out.print(request.getBuilding().toString());
                JOptionPane.showMessageDialog(null, "Assigned Successfully");
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a salesman");
        }
    }//GEN-LAST:event_SendJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackJBtn;
    private javax.swing.JTable SalesmanTable;
    private javax.swing.JButton SendJBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
