/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.managerRole;
import business.EcoSystem;
import business.building.Building;
import business.building.BuildingDirectory;
import business.enterprise.Enterprise;
import business.enterprise.EnterpriseDirectory;
import business.network.Network;
import business.organization.CompanyManagerOrganization;
import business.useraccount.UserAccount;
import business.workqueue.LabTestWorkRequest;
import business.workqueue.ManagerManagerRequest;
import business.workqueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author wenhaofeng
 */
public class CompanyManagerRoleJpanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private CompanyManagerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private Network network;
    /**
     * Creates new form manageRoleJpanel
     */
    public CompanyManagerRoleJpanel(JPanel userProcessContainer, UserAccount account, CompanyManagerOrganization organization,Network network, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.network = network;
        
        populateRequestTable();
    }
 public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkqueue().getWorkRequestList()){
            Object[] row = new Object[5];
            Building building = ((ManagerManagerRequest) request).getBuilding();
            
            row[0] = building;
            row[1] = request.getReceiver();
            row[2] = request;
            
            String result = ((ManagerManagerRequest) request).getResult();
            row[3] = result == null ? "Pending" : result;
            //System.out.print(String.valueOf(request.getStatus()));
            if(String.valueOf(((ManagerManagerRequest) request).getResult()).equals("Accepted")){
                enterprise.getBuildingDirectory().delBuilding(building);
            }
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        DismissJBtn = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        AssignJBtn = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(166, 166, 234));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Address", "Receiver", "Status", "Result"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 523, 190));

        DismissJBtn.setText("Dismiss");
        DismissJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DismissJBtnActionPerformed(evt);
            }
        });
        jPanel1.add(DismissJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, -1, -1));

        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(refreshTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 28, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setForeground(new java.awt.Color(255, 255, 255));
        enterpriseLabel.setText("EnterPrise :");
        jPanel1.add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(21, 27, 127, 30));

        valueLabel.setForeground(new java.awt.Color(255, 255, 255));
        valueLabel.setText("Company Manager");
        jPanel1.add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, 158, 26));

        AssignJBtn.setText("Assign Building");
        AssignJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssignJBtnActionPerformed(evt);
            }
        });
        jPanel1.add(AssignJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 300, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DismissJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DismissJBtnActionPerformed
     int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow >= 0) {
            ManagerManagerRequest request = (ManagerManagerRequest) workRequestJTable.getValueAt(selectedRow, 2);
            if(request.getStatus().equals("Finished")){
                userAccount.getWorkqueue().getWorkRequestList().remove(request);
                populateRequestTable();
                JOptionPane.showMessageDialog(null, "Successfully Dismissed.");
            }
            else{
                JOptionPane.showMessageDialog(null, "This one has not finished.");
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Choose a request to process.");
            return;
        }
       

    }//GEN-LAST:event_DismissJBtnActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();

    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void AssignJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssignJBtnActionPerformed
        // TODO add your handling code here:
        BuildingDirectory buildingdirectory = enterprise.getBuildingDirectory();
        EnterpriseDirectory enterprisedirectory = network.getEnterpriseDirectory();
        AssignBuildingJpanel assignBuildingJpanel = new AssignBuildingJpanel(userProcessContainer,enterprisedirectory,buildingdirectory,userAccount);
        userProcessContainer.add("assignBuildingJpanel", assignBuildingJpanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_AssignJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssignJBtn;
    private javax.swing.JButton DismissJBtn;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
